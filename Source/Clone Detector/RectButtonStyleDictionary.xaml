<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CloneDetector" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d">
    <Style x:Key="FocusVisual2">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               SnapsToDevicePixels="true" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               StrokeThickness="1" 
                               StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RectButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- root element -->
                    <Rectangle x:Name="root" SnapsToDevicePixels="true">
                        <!-- define the shape of the button with opacity mask -->
                        <Rectangle.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border Background="White"
                                            Width="{Binding ActualWidth, ElementName=root}" 
                                            Height="{Binding ActualHeight, ElementName=root}" 
                                            CornerRadius="{Binding CornerRadius, ElementName=bgBorder}"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.OpacityMask>
                        
                        <!-- the background of the button -->
                        <Rectangle.Fill>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Grid x:Name="parentGrid"
                                          ClipToBounds="True"
                                          Width="{Binding ActualWidth, ElementName=root}" 
                                          Height="{Binding ActualHeight, ElementName=root}" >
                                        
                                        <!-- background -->
                                        <Border x:Name="bgBorder" Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="0"/>
                                        
                                        <!-- shadows -->
                                        <Border x:Name="shadowsBorder" BorderThickness="6" Opacity="0.5" Margin="-2" BorderBrush="Black">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,.5" StartPoint="0.5,0" SpreadMethod="Reflect">
                                                    <GradientStop Color="#00000000" Offset="0"/>
                                                    <GradientStop Color="#3F000000" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border.Effect>
                                                <BlurEffect Radius="10"/>
                                            </Border.Effect>
                                        </Border>
                                        
                                        <!-- highlights -->
                                        <Border x:Name="highlightsBorder" Margin="4" BorderThickness="4">
                                            <Border.Effect>
                                                <BlurEffect/>
                                            </Border.Effect>
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <LinearGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                            <RotateTransform x:Name="s" Angle="-12" CenterY="0.5" CenterX="0.5"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </LinearGradientBrush.RelativeTransform>
                                                    <GradientStop Offset="0.25"/>
                                                    <GradientStop Color="White"/>
                                                    <GradientStop Color="Transparent" Offset="0.75"/>
                                                    <GradientStop Color="#3FA4F8FF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                        </Border>
                                        
                                        <!-- content -->
                                        <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter.Effect>
                                                <DropShadowEffect BlurRadius="0" ShadowDepth="1" Color="White" Opacity=".5"/>
                                            </ContentPresenter.Effect>
                                        </ContentPresenter>
                                        
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.Fill>
                        
                        <!-- the visual state for this button -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Pressed"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="bgBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button.Static.Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="highlightsBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="bgBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button.MouseOver.Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="highlightsBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="shadowsBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.85"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="bgBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button.Pressed.Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="bgBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button.Disabled.Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="bgBorder" Value="{StaticResource Button.Static.Background}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="bgBorder" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="bgBorder" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="bgBorder" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>